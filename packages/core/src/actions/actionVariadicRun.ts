/* eslint-disable max-len */
import type { ContextEnhancer, ContextRunner } from '@foscia/core/actions/types';

// Do not edit this file, it is generated by `pnpm generate-files`.

/**
 * Variadic action run methods type.
 *
 * @internal
 */
export type ActionVariadicRun<C extends {}> = {
  run<R, C1 extends {} = C>(enhancer1: ContextEnhancer<C, C1>, runner: ContextRunner<C1, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, runner: ContextRunner<C2, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, runner: ContextRunner<C3, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, runner: ContextRunner<C4, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, runner: ContextRunner<C5, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, runner: ContextRunner<C6, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, runner: ContextRunner<C7, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, runner: ContextRunner<C8, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7, C9 extends C8 = C8>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, enhancer9: ContextEnhancer<C8, C9>, runner: ContextRunner<C9, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7, C9 extends C8 = C8, C10 extends C9 = C9>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, enhancer9: ContextEnhancer<C8, C9>, enhancer10: ContextEnhancer<C9, C10>, runner: ContextRunner<C10, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7, C9 extends C8 = C8, C10 extends C9 = C9, C11 extends C10 = C10>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, enhancer9: ContextEnhancer<C8, C9>, enhancer10: ContextEnhancer<C9, C10>, enhancer11: ContextEnhancer<C10, C11>, runner: ContextRunner<C11, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7, C9 extends C8 = C8, C10 extends C9 = C9, C11 extends C10 = C10, C12 extends C11 = C11>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, enhancer9: ContextEnhancer<C8, C9>, enhancer10: ContextEnhancer<C9, C10>, enhancer11: ContextEnhancer<C10, C11>, enhancer12: ContextEnhancer<C11, C12>, runner: ContextRunner<C12, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7, C9 extends C8 = C8, C10 extends C9 = C9, C11 extends C10 = C10, C12 extends C11 = C11, C13 extends C12 = C12>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, enhancer9: ContextEnhancer<C8, C9>, enhancer10: ContextEnhancer<C9, C10>, enhancer11: ContextEnhancer<C10, C11>, enhancer12: ContextEnhancer<C11, C12>, enhancer13: ContextEnhancer<C12, C13>, runner: ContextRunner<C13, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7, C9 extends C8 = C8, C10 extends C9 = C9, C11 extends C10 = C10, C12 extends C11 = C11, C13 extends C12 = C12, C14 extends C13 = C13>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, enhancer9: ContextEnhancer<C8, C9>, enhancer10: ContextEnhancer<C9, C10>, enhancer11: ContextEnhancer<C10, C11>, enhancer12: ContextEnhancer<C11, C12>, enhancer13: ContextEnhancer<C12, C13>, enhancer14: ContextEnhancer<C13, C14>, runner: ContextRunner<C14, R>): Promise<Awaited<R>>;
  run<R, C1 extends {} = C, C2 extends C1 = C1, C3 extends C2 = C2, C4 extends C3 = C3, C5 extends C4 = C4, C6 extends C5 = C5, C7 extends C6 = C6, C8 extends C7 = C7, C9 extends C8 = C8, C10 extends C9 = C9, C11 extends C10 = C10, C12 extends C11 = C11, C13 extends C12 = C12, C14 extends C13 = C13, C15 extends C14 = C14>(enhancer1: ContextEnhancer<C, C1>, enhancer2: ContextEnhancer<C1, C2>, enhancer3: ContextEnhancer<C2, C3>, enhancer4: ContextEnhancer<C3, C4>, enhancer5: ContextEnhancer<C4, C5>, enhancer6: ContextEnhancer<C5, C6>, enhancer7: ContextEnhancer<C6, C7>, enhancer8: ContextEnhancer<C7, C8>, enhancer9: ContextEnhancer<C8, C9>, enhancer10: ContextEnhancer<C9, C10>, enhancer11: ContextEnhancer<C10, C11>, enhancer12: ContextEnhancer<C11, C12>, enhancer13: ContextEnhancer<C12, C13>, enhancer14: ContextEnhancer<C13, C14>, enhancer15: ContextEnhancer<C14, C15>, runner: ContextRunner<C15, R>): Promise<Awaited<R>>;
};

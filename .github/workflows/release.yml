name: release
run-name: "${{ github.event.inputs.dry == 'true' && '[dry run] ' || '' }}release ${{ inputs.increment }}.${{ inputs.prerelease }} by @${{ github.actor }}"

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      increment:
        type: choice
        description: Choose release
        required: true
        options:
          - patch
          - minor
          - major
          - bump
      prerelease:
        type: choice
        description: Choose prerelease
        required: true
        options:
          - stable
          - alpha
          - beta
      dry:
        type: boolean
        description: Dry release
        default: false

jobs:
  publish:
    name: Publish release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Docker build
        run: make docker-build

      - name: Test
        run: make test

      - name: Build
        run: make build

      - name: NPM config
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Git config
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INCREMENT_ARG: ${{ fromJSON('{"bump":"", "patch":"--increment=patch", "minor":"--increment=minor", "major":"--increment=major"}')[github.event.inputs.increment] }}
          PRERELEASE_ARG: ${{ fromJSON('{"stable":"", "beta":"--prerelease=beta", "alpha":"--prerelease=alpha"}')[github.event.inputs.prerelease] }}
          DRY_ARG: ${{ github.event.inputs.dry == 'true' && '--dry' || '' }}
        run: docker compose exec -it -e NPM_TOKEN -e GITHUB_TOKEN foscia-node pnpm run release $INCREMENT_ARG $PRERELEASE_ARG $DRY_ARG --ci --verbose
